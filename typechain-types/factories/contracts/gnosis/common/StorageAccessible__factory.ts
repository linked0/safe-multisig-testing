/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  StorageAccessible,
  StorageAccessibleInterface,
} from "../../../../contracts/gnosis/common/StorageAccessible";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "getStorageAt",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "calldataPayload",
        type: "bytes",
      },
    ],
    name: "simulateAndRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102cc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635624b25b1461003b578063b4faba0914610064575b600080fd5b61004e61004936600461011a565b610079565b60405161005b919061013c565b60405180910390f35b6100776100723660046101a1565b6100f7565b005b60606000610088836020610271565b67ffffffffffffffff8111156100a0576100a061018b565b6040519080825280601f01601f1916602001820160405280156100ca576020820181803683370190505b50905060005b838110156100ed57848101546020808302840101526001016100d0565b5090505b92915050565b600080825160208401855af480600052503d6020523d600060403e60403d016000fd5b6000806040838503121561012d57600080fd5b50508035926020909101359150565b60006020808352835180602085015260005b8181101561016a5785810183015185820160400152820161014e565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156101b457600080fd5b82356001600160a01b03811681146101cb57600080fd5b9150602083013567ffffffffffffffff808211156101e857600080fd5b818501915085601f8301126101fc57600080fd5b81358181111561020e5761020e61018b565b604051601f8201601f19908116603f011681019083821181831017156102365761023661018b565b8160405282815288602084870101111561024f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b80820281158282048414176100f157634e487b7160e01b600052601160045260246000fdfea26469706673582212206652513dba69ef8ba2f5a3156b5fad9cf80067a9a8e7b28ed4b696137d612f4864736f6c63430008180033";

type StorageAccessibleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StorageAccessibleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StorageAccessible__factory extends ContractFactory {
  constructor(...args: StorageAccessibleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StorageAccessible & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StorageAccessible__factory {
    return super.connect(runner) as StorageAccessible__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StorageAccessibleInterface {
    return new Interface(_abi) as StorageAccessibleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StorageAccessible {
    return new Contract(address, _abi, runner) as unknown as StorageAccessible;
  }
}
