/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Lock, LockInterface } from "../../contracts/Lock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000df738038062000df7833981016040819052620000349162000334565b80848460036200004583826200045a565b5060046200005482826200045a565b5050506001600160a01b0381166200008757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200009281620000a9565b506200009f3383620000fb565b505050506200054e565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001275760405163ec442f0560e01b8152600060048201526024016200007e565b620001356000838362000139565b5050565b6001600160a01b038316620001685780600260008282546200015c919062000526565b90915550620001dc9050565b6001600160a01b03831660009081526020819052604090205481811015620001bd5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016200007e565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620001fa5760028054829003905562000219565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200025f91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200029457600080fd5b81516001600160401b0380821115620002b157620002b16200026c565b604051601f8301601f19908116603f01168101908282118183101715620002dc57620002dc6200026c565b8160405283815260209250866020858801011115620002fa57600080fd5b600091505b838210156200031e5785820183015181830184015290820190620002ff565b6000602085830101528094505050505092915050565b600080600080608085870312156200034b57600080fd5b84516001600160401b03808211156200036357600080fd5b620003718883890162000282565b955060208701519150808211156200038857600080fd5b50620003978782880162000282565b60408701516060880151919550935090506001600160a01b0381168114620003be57600080fd5b939692955090935050565b600181811c90821680620003de57607f821691505b602082108103620003ff57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000455576000816000526020600020601f850160051c81016020861015620004305750805b601f850160051c820191505b8181101562000451578281556001016200043c565b5050505b505050565b81516001600160401b038111156200047657620004766200026c565b6200048e81620004878454620003c9565b8462000405565b602080601f831160018114620004c65760008415620004ad5750858301515b600019600386901b1c1916600185901b17855562000451565b600085815260208120601f198616915b82811015620004f757888601518255948401946001909101908401620004d6565b5085821015620005165787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200054857634e487b7160e01b600052601160045260246000fd5b92915050565b610899806200055e6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101aa578063a9059cbb146101b2578063dd62ed3e146101c5578063f2fde38b146101fe57600080fd5b806370a082311461015c578063715018a6146101855780638da5cb5b1461018f57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a5780635cfab57214610149575b600080fd5b6100dc610211565b6040516100e991906106e2565b60405180910390f35b61010561010036600461074d565b6102a3565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610777565b6102bd565b604051601281526020016100e9565b610105610157366004610777565b6102e1565b61011961016a3660046107b3565b6001600160a01b031660009081526020819052604090205490565b61018d610300565b005b6005546040516001600160a01b0390911681526020016100e9565b6100dc610314565b6101056101c036600461074d565b610323565b6101196101d33660046107d5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018d61020c3660046107b3565b610331565b60606003805461022090610808565b80601f016020809104026020016040519081016040528092919081815260200182805461024c90610808565b80156102995780601f1061026e57610100808354040283529160200191610299565b820191906000526020600020905b81548152906001019060200180831161027c57829003601f168201915b5050505050905090565b6000336102b1818585610374565b60019150505b92915050565b6000336102cb858285610386565b6102d6858585610405565b506001949350505050565b60006102eb610464565b6102f6848484610405565b5060019392505050565b610308610464565b6103126000610491565b565b60606004805461022090610808565b6000336102b1818585610405565b610339610464565b6001600160a01b03811661036857604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61037181610491565b50565b61038183838360016104e3565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156103ff57818110156103f057604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161035f565b6103ff848484840360006104e3565b50505050565b6001600160a01b03831661042f57604051634b637e8f60e11b81526000600482015260240161035f565b6001600160a01b0382166104595760405163ec442f0560e01b81526000600482015260240161035f565b6103818383836105b8565b6005546001600160a01b031633146103125760405163118cdaa760e01b815233600482015260240161035f565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03841661050d5760405163e602df0560e01b81526000600482015260240161035f565b6001600160a01b03831661053757604051634a1406b160e11b81526000600482015260240161035f565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156103ff57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105aa91815260200190565b60405180910390a350505050565b6001600160a01b0383166105e35780600260008282546105d89190610842565b909155506106559050565b6001600160a01b038316600090815260208190526040902054818110156106365760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161035f565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661067157600280548290039055610690565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106d591815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b81811015610710578581018301518582016040015282016106f4565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461074857600080fd5b919050565b6000806040838503121561076057600080fd5b61076983610731565b946020939093013593505050565b60008060006060848603121561078c57600080fd5b61079584610731565b92506107a360208501610731565b9150604084013590509250925092565b6000602082840312156107c557600080fd5b6107ce82610731565b9392505050565b600080604083850312156107e857600080fd5b6107f183610731565b91506107ff60208401610731565b90509250929050565b600181811c9082168061081c57607f821691505b60208210810361083c57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102b757634e487b7160e01b600052601160045260246000fdfea26469706673582212202c1040b1b3d35c4cdb33a0dbe8a05ee05aa085c4e499724a84ba9858c5829bdd64736f6c63430008180033";

type LockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lock__factory extends ContractFactory {
  constructor(...args: LockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      initialSupply,
      _owner,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      initialSupply,
      _owner,
      overrides || {}
    ) as Promise<
      Lock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Lock__factory {
    return super.connect(runner) as Lock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockInterface {
    return new Interface(_abi) as LockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Lock {
    return new Contract(address, _abi, runner) as unknown as Lock;
  }
}
